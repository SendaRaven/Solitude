{"version":3,"sources":["Components/PetitionListView.jsx","Components/CreatePetitionView.jsx","Components/Home.jsx","Components/CreateSignature.jsx","Components/PetitionView.jsx","App.js","storage.js","serviceWorker.js","index.js"],"names":["PetitionListView","className","ListGroup","this","props","petitions","map","petition","index","ListGroupItem","key","to","pathname","id","state","title","Component","CreatePetitionView","handleTitleChange","event","setState","target","value","console","log","handleDescriptionChange","description","handleSubmitButton","uuid","signatures","newPetition","Form","FormGroup","Label","for","Input","type","placeholder","onChange","name","Button","color","onClick","Home","handleRedirect","redirect","renderRedirect","Jumbotron","CreateSignature","handleFirstNameChange","firstName","handleLastNameChange","lastName","handleEmailChange","email","handleSignatureButton","signature","newSignature","petitionId","PetitionView","location","Card","CardHeader","CardBody","CardText","CardFooter","Table","scope","App","canUseLocalStorage","Error","localStorage","setItem","defaultValue","getItem","removeItem","e","push","petitionIndex","findIndex","JSON","parse","stringify","Navbar","light","expand","NavbarBrand","Nav","navbar","NavItem","NavLink","exact","path","component","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c3b783a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\"\r\nimport { Link } from 'react-router-dom'\r\n// import PetitionView from './PetitionView';\r\n\r\n\r\n\r\nclass PetitionListView extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"body\">\r\n                <h1>Petitions</h1>\r\n                <ListGroup >\r\n                    {this.props.petitions.map((petition, index) =>\r\n\r\n                        <ListGroupItem key={index} petition={petition}><Link to={{ pathname: `/${petition.id}`, state: { petition: petition } }}>{petition.title}</Link></ListGroupItem>\r\n\r\n                    )}\r\n                </ListGroup>\r\n                <hr />\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default PetitionListView;","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport uuid from 'uuid/v4';\r\n\r\nexport default class CreatePetitionView extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            description: \"\"\r\n        };\r\n    }\r\n    handleTitleChange = event => {\r\n        this.setState({\r\n            title: event.target.value,\r\n        });\r\n        console.log(this.state);\r\n    };\r\n    handleDescriptionChange = event => {\r\n        this.setState({\r\n            description: event.target.value,\r\n        });\r\n        console.log(this.state);\r\n    };\r\n    handleSubmitButton = () => {\r\n        let petitions = {\r\n            id: uuid(),\r\n            title: this.state.title,\r\n            description: this.state.description,\r\n            signatures: []\r\n        };\r\n        console.log(petitions);\r\n\r\n        this.props.newPetition(petitions);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>\r\n                    Create a Petition\r\n      </h1>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"title\">Title</Label>\r\n                        <Input type=\"text\" id=\"title\" placeholder=\"Write your title\" value={this.state.title} onChange={this.handleTitleChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"textarea\" name=\"text\" id=\"description\" onChange={this.handleDescriptionChange} placeholder=\"Write a description for your petition\" value={this.state.description} />\r\n\r\n                    </FormGroup>\r\n                    <Button color=\"secondary\" onClick={this.handleSubmitButton}>Create</Button>\r\n                </Form>\r\n                <hr />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Jumbotron, Button } from 'reactstrap';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            redirect: false,\r\n        }\r\n    }\r\n\r\n    handleRedirect = () => {\r\n        this.setState({ redirect: true })\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            return <Redirect to='/createPetition' />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<Jumbotron className=\"text-center\">\r\n            {this.renderRedirect()}\r\n            <h1>Solitude – Online Petition Platform </h1>\r\n            <Button color=\"primary\" onClick={this.handleRedirect}>Create Petition</Button>\r\n        </Jumbotron>);\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\n\r\nclass CreateSignature extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n        }\r\n    }\r\n\r\n    handleFirstNameChange = event => {\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n        console.log(this.state.firstName);\r\n    }\r\n\r\n    handleLastNameChange = event => {\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n        console.log(this.state.lastName);\r\n    }\r\n\r\n    handleEmailChange = event => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n        console.log(this.state.email);\r\n    }\r\n\r\n    handleSignatureButton = () => {\r\n        let signature = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n        }\r\n        console.log(signature);\r\n        this.props.newSignature(this.props.petitionId, signature)\r\n\r\n        this.setState({\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Sign this Petition</h3>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"firstname\">First Name</Label>\r\n                        <Input type=\"text\" id=\"firstname\" placeholder=\"Your first name\" value={this.state.firstName} onChange={this.handleFirstNameChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"lastname\">Last Name</Label>\r\n                        <Input type=\"text\" id=\"lastname\" placeholder=\"Your last name\" value={this.state.lastName} onChange={this.handleLastNameChange} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"email\" id=\"email\" placeholder=\"Your email\" value={this.state.email} onChange={this.handleEmailChange} />\r\n                    </FormGroup>\r\n                    <Button color=\"primary\" onClick={this.handleSignatureButton}>Sign</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateSignature;","import React, { Component } from 'react';\r\nimport CreateSignature from './CreateSignature'\r\n\r\nimport { Card, CardHeader, CardBody, CardFooter, CardText, Table } from 'reactstrap';\r\nexport default class PetitionView extends Component {\r\n\r\n    render() {\r\n        const petition = this.props.location.state.petition;\r\n        return (\r\n\r\n            <Card className=\"body\">\r\n                <CardHeader>{petition.title}</CardHeader>\r\n                <CardBody>\r\n                    <CardText>{petition.description}</CardText>\r\n\r\n                </CardBody>\r\n                <CardFooter>\r\n                    <h6>Signed by:</h6>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>First Name</th>\r\n                                <th>Last Name</th>\r\n                                <th>Username</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {petition.signatures.map((signature, index) =>\r\n                                <tr key={index}>\r\n                                    <th scope=\"row\">{index + 1}</th>\r\n                                    <td>{signature.firstName}</td>\r\n                                    <td>{signature.lastName}</td>\r\n                                    <td>{signature.email}</td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </CardFooter>\r\n                < CreateSignature newSignature={this.props.newSignature} petitionId={petition.id} />\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'\r\nimport { Navbar, NavbarBrand, NavItem, Nav, NavLink } from 'reactstrap';\r\n\r\nimport PetitionListView from './Components/PetitionListView'\r\nimport CreatePetitionView from './Components/CreatePetitionView';\r\nimport Home from './Components/Home';\r\nimport PetitionView from './Components/PetitionView'\r\n\r\nimport \"./storage\"\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    let petitions = JSON.parse(localStorage.getItem('petitions')) || [];\r\n    this.state = {\r\n      petitions: petitions,\r\n    }\r\n    console.log(petitions);\r\n  }\r\n\r\n  newPetition = petition => {\r\n    let petitions = this.state.petitions;\r\n    petitions.push(petition);\r\n    this.setState({\r\n      petitions: petitions,\r\n    })\r\n    console.log(this.state);\r\n  }\r\n\r\n  newSignature = (petitionId, signature) => {\r\n    let petitions = this.state.petitions;\r\n    let petitionIndex = petitions.findIndex(petition => petition.id === petitionId);\r\n    console.log(\"Index\", petitionIndex);\r\n    let signatures = petitions[petitionIndex].signatures || [];\r\n\r\n    signatures.push(signature);\r\n    petitions[petitionIndex].signatures = signatures;\r\n    this.setState({\r\n      petitions: petitions\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('petitions', JSON.stringify(this.state.petitions))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand>Solitude</NavbarBrand>\r\n          <Nav className=\"ml-auto\" navbar>\r\n          <NavItem>\r\n          <NavLink><Link to=\"/\"> Home </Link></NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink><Link to=\"/createPetition\"> Create a Petition</Link></NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n          <NavLink><Link to=\"/viewPetitions\"> View all Petitions </Link></NavLink>\r\n          </NavItem>\r\n          {/* <CreatePetitionView newPetition={this.newPetition} /> */}\r\n          {/* <PetitionView petitions={this.state.petitions} /> */}\r\n          {/* <CreateSignature newSignature={this.newSignature} /> */}\r\n          </Nav>\r\n        </Navbar>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/createPetition\" render={(props) => <CreatePetitionView {...props} newPetition={this.newPetition} />} />\r\n          <Route path=\"/viewPetitions\" render={(props) => <PetitionListView {...props} petitions={this.state.petitions} />} />\r\n\r\n          <Route path=\"/:id\" render={(props) => <PetitionView {...props} newSignature={this.newSignature} />} />\r\n\r\n        </Switch>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","class Storage {\r\n    constructor() {\r\n      if (!this.canUseLocalStorage()) {\r\n        throw Error(\"The local storage is disabled or full!\");\r\n      }\r\n    }\r\n  \r\n    set(key, value) {\r\n      localStorage.setItem(key, value);\r\n    }\r\n  \r\n    get(key, defaultValue = null) {\r\n      const value = localStorage.getItem(key);\r\n  \r\n      if (value !== null) {\r\n        return value;\r\n      }\r\n  \r\n      return defaultValue;\r\n    }\r\n  \r\n    canUseLocalStorage() {\r\n      let test = \"test\";\r\n  \r\n      try {\r\n        localStorage.setItem(test, test);\r\n        localStorage.removeItem(test);\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n  \r\n      return true;\r\n    }\r\n  }\r\n  \r\n  export default new Storage();","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}